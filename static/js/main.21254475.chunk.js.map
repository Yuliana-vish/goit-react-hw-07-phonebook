{"version":3,"sources":["components/Form/Form.module.css","components/Contacts/Contacts.module.css","components/Filter/Filter.module.css","components/Title/index.jsx","components/Form/FormButton.jsx","components/Form/FormName.jsx","components/Form/FormNumber.jsx","redux/phonebook/contact-actions.js","redux/phonebook/contact-operations.js","redux/phonebook/contact-selectors.js","redux/phonebook/contact-reducer.js","components/Form/index.jsx","components/Contacts/ContactsList.jsx","components/Contacts/ContactsList.container.jsx","components/Filter/index.jsx","App.js","redux/store.js","index.js"],"names":["module","exports","useStyles","createUseStyles","title","textTransform","fontSize","marginLeft","marginBottom","Title","classes","className","button","cursor","width","borderRadius","backgroundColor","outline","color","ButtonForm","type","FormName","name","handleChange","styles","label","value","onChange","placeholder","input","required","FormNumber","number","fetchContactsRequest","createAction","fetchContactsSuccess","fetchContactsError","addContactRequest","addContactSuccess","addContactError","deleteContactRequest","deleteContactSuccess","deleteContactError","changeFilter","axios","defaults","baseURL","dispatch","a","actions","get","data","contact","post","id","delete","getContacts","state","contacts","items","getFilter","filter","getLoading","loading","getVisibleContacts","createSelector","normalizedFilter","toLowerCase","includes","createReducer","_","payload","combineReducers","Form","event","target","setState","handleSubmit","preventDefault","uuidv4","props","addContact","this","form","onSubmit","FormButton","Component","connect","contactSelectors","contactOperations","ContactsList","fetchContacts","allContacts","onDeleteContact","isLoading","list","length","map","item","btn","onClick","loader","height","handleChangeFilter","htmlFor","App","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","store","configureStore","reducer","contactReducer","devTools","process","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.21254475.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Form_form__31iCB\",\"label\":\"Form_label__3YEdp\",\"input\":\"Form_input__10LiG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"Contacts_list__1Pgrk\",\"item\":\"Contacts_item__1OaGM\",\"contact\":\"Contacts_contact__35Vaw\",\"btn\":\"Contacts_btn__1kGyq\",\"loader\":\"Contacts_loader__1XBM4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Filter_label__3RoOf\",\"input\":\"Filter_input__2dXg2\"};","import { createUseStyles } from 'react-jss';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst useStyles = createUseStyles({\r\n  title: {\r\n    textTransform: 'capitalize',\r\n    fontSize: 30,\r\n    marginLeft: 30,\r\n    marginBottom: 10,\r\n  },\r\n});\r\n\r\nconst Title = ({ title }) => {\r\n    const classes = useStyles();\r\n    return <h2 className={classes.title}>{title}</h2>;\r\n};\r\n\r\nTitle.propTypes = {\r\n    title: PropTypes.string.isRequired,\r\n};\r\nexport default Title;","\r\nimport { createUseStyles } from 'react-jss';\r\n\r\nconst useStyles = createUseStyles({\r\n  button: {\r\n    cursor: 'pointer',\r\n    width: 100,\r\n    borderRadius: 3,\r\n    backgroundColor: 'rgb(253, 252, 252)',\r\n    outline: 'none',\r\n    \r\n    '&:hover': {\r\n        backgroundColor: 'blue',\r\n        color: 'white',\r\n    },\r\n  },\r\n});\r\n\r\nconst ButtonForm = () => {\r\n  const classes = useStyles();\r\n  return (\r\n    <button className={classes.button} type=\"submit\">\r\n      Add contact\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default ButtonForm;\r\n","import styles from './Form.module.css';\r\n\r\nconst FormName = ({ name, handleChange, }) => {\r\n  return (\r\n    <label className={styles.label}>\r\n      Name\r\n      <input\r\n        \r\n        type=\"text\"\r\n        value={name}\r\n        name=\"name\"\r\n        onChange={handleChange}\r\n        placeholder=\"Enter your full name\"\r\n        className={styles.input}\r\n        required\r\n      />\r\n    </label>\r\n  );\r\n};\r\n\r\n export default FormName;","import styles from './Form.module.css';\r\n\r\nconst FormNumber = ({ number, handleChange, }) => {\r\n  return (\r\n    <label className={styles.label}>\r\n      Number\r\n      <input\r\n        \r\n        type=\"tel\"\r\n        value={number}\r\n        name=\"number\"\r\n        onChange={handleChange}\r\n        placeholder=\"xxx-xx-xx\"\r\n        className={styles.input}\r\n        required\r\n      />\r\n    </label>\r\n  );\r\n};\r\n\r\nexport default FormNumber;\r\n","import { createAction } from '@reduxjs/toolkit';\r\n\r\nconst fetchContactsRequest = createAction('phonebook/fetchContactsRequest'); \r\nconst fetchContactsSuccess = createAction('phonebook/fetchContactsSuccess');\r\nconst fetchContactsError = createAction('phonebook/fetchContactsError'); \r\n\r\nconst addContactRequest = createAction('phonebook/addContactRequest'); \r\nconst addContactSuccess = createAction('phonebook/addContactSuccess'); \r\nconst addContactError = createAction('phonebook/addContactError'); \r\n\r\nconst deleteContactRequest = createAction('phonebook/deleteContactRequest');\r\nconst deleteContactSuccess = createAction('phonebook/deleteContactSuccess'); \r\nconst deleteContactError = createAction('phonebook/deleteContactError'); \r\n\r\nconst changeFilter = createAction('phonebook/changeFilter');\r\n\r\n\r\n// eslint-disable-next-line\r\nexport default { \r\n  fetchContactsRequest,\r\n  fetchContactsSuccess,\r\n  fetchContactsError,\r\n  addContactRequest,\r\n  addContactSuccess,\r\n  addContactError,\r\n  deleteContactRequest,\r\n  deleteContactSuccess,\r\n  deleteContactError,\r\n  changeFilter,\r\n};","import axios from 'axios';\r\nimport actions from './contact-actions';\r\n\r\n\r\naxios.defaults.baseURL = 'http://localhost:4040/contacts';\r\n\r\nconst fetchContacts = () => async dispatch => {\r\n  dispatch(actions.fetchContactsRequest());\r\n\r\n  try {\r\n    const { data } = await axios.get(`/contacts`);\r\n    dispatch(actions.fetchContactsSuccess(data));\r\n  } catch (error) {\r\n    dispatch(actions.fetchContactsError(error));\r\n  }\r\n};\r\n\r\nconst addContact = ({ name, number }) => async dispatch => {\r\n  const contact = {\r\n    name,\r\n    number,\r\n  };\r\n\r\n  dispatch(actions.addContactRequest());\r\n\r\n  try {\r\n    const { data } = await axios.post('/contacts', contact);\r\n    dispatch(actions.addContactSuccess(data));\r\n  } catch (error) {\r\n    dispatch(actions.addContactError(error));\r\n  }\r\n};\r\n\r\nconst deleteContact = id => async dispatch => {\r\n  dispatch(actions.deleteContactRequest());\r\n  try {\r\n    await axios.delete(`/contacts/${id}`);\r\n    dispatch(actions.deleteContactSuccess(id));\r\n  } catch (error) {\r\n    dispatch(actions.deleteContactError(error));\r\n  }\r\n};\r\n\r\n//eslint-disable-next-line\r\nexport default { fetchContacts, addContact, deleteContact };","import { createSelector } from '@reduxjs/toolkit';\r\n\r\nconst getContacts = state => state.contacts.items;\r\nconst getFilter = state => state.contacts.filter;\r\nconst getLoading = state => state.contacts.loading;\r\n\r\n\r\nconst getVisibleContacts = createSelector(\r\n  [getContacts, getFilter],\r\n  (items, filter) => {\r\n    const normalizedFilter = filter.toLowerCase();\r\n    return items.filter(({ name }) =>\r\n      name.toLowerCase().includes(normalizedFilter),\r\n    );\r\n  },\r\n);\r\n\r\n\r\n//eslint-disable-next-line\r\nexport default { getContacts, getFilter, getLoading, getVisibleContacts };\r\n"," import { combineReducers } from 'redux';\r\n import { createReducer } from '@reduxjs/toolkit';\r\n import actions from './contact-actions';\r\n\r\n const {\r\n   fetchContactsRequest,\r\n   fetchContactsSuccess,\r\n   fetchContactsError,\r\n   addContactRequest,\r\n   addContactSuccess,\r\n   addContactError,\r\n   deleteContactRequest,\r\n   deleteContactSuccess,\r\n   deleteContactError,\r\n } = actions;\r\n\r\n const contacts = {\r\n   items: [],\r\n   filter: '',\r\n };\r\n\r\n const items = createReducer(contacts.items, {\r\n   [fetchContactsSuccess]: (_, { payload }) => payload,\r\n   [addContactSuccess]: (state, { payload }) => [payload, ...state],\r\n   [deleteContactSuccess]: (state, { payload }) =>\r\n     state.filter(({ id }) => id !== payload),\r\n });\r\n\r\n const loading = createReducer(false, {\r\n   [fetchContactsRequest]: () => true,\r\n   [fetchContactsSuccess]: () => false,\r\n   [fetchContactsError]: () => false,\r\n   [addContactRequest]: () => true,\r\n   [addContactSuccess]: () => false,\r\n   [addContactError]: () => false,\r\n   [deleteContactRequest]: () => true,\r\n   [deleteContactSuccess]: () => false,\r\n   [deleteContactError]: () => false,\r\n });\r\n\r\n const filter = createReducer(contacts.filter, {\r\n   [actions.changeFilter]: (_, { payload }) => payload,\r\n });\r\n\r\n //eslint-disable-next-line\r\n export default combineReducers({\r\n   items,\r\n   filter,\r\n   loading,\r\n });","import { Component } from 'react';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport { connect } from 'react-redux';\r\nimport FormButton from './FormButton';\r\nimport FormName from './FormName';\r\nimport FormNumber from './FormNumber'\r\nimport styles from './Form.module.css';\r\nimport { contactOperations, contactSelectors } from '../../redux/phonebook';\r\n\r\nclass Form extends Component {\r\n \r\n  state = {\r\n    name: '',\r\n    number: '',\r\n  };\r\n\r\n  handleChange = event => {\r\n    const { name, value } = event.target;\r\n    this.setState({\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  handleSubmit = event => {\r\n    event.preventDefault();\r\n    const contact = {\r\n      id: uuidv4(),\r\n      name: this.state.name,\r\n      number: this.state.number,\r\n    };\r\n    this.props.addContact(contact);\r\n    this.setState({\r\n      name: '',\r\n      number: '',\r\n    });\r\n  };\r\n  \r\n  render() {\r\n    const {\r\n      name,\r\n      number,\r\n      } = this.state;\r\n    return (\r\n      <>\r\n       <form className={styles.form} onSubmit={this.handleSubmit}>\r\n        <FormName\r\n          handleChange={this.handleChange}\r\n          name={name}\r\n  \r\n        />\r\n        <FormNumber\r\n          handleChange={this.handleChange}\r\n          number={number}\r\n          \r\n        />\r\n        <FormButton />\r\n        </form>\r\n        </>\r\n    );\r\n  };\r\n}\r\n\r\n\r\nconst mapStateToProps = state => ({\r\n  contacts: contactSelectors.getContacts(state),\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  addContact: data => dispatch(contactOperations.addContact(data)),\r\n});\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Form);","import { v4 as uuidv4 } from 'uuid';\r\nimport { Component } from 'react';\r\nimport styles from './Contacts.module.css';\r\nimport Loader from 'react-loader-spinner';\r\n\r\nclass ContactsList extends Component {\r\n  componentDidMount() {\r\n    this.props.fetchContacts();\r\n  }\r\n  render() {\r\n    const { allContacts, onDeleteContact, isLoading } = this.props;\r\n    return (\r\n      <>\r\n        <ul className={styles.list}>\r\n          {allContacts.length > 0 && (\r\n            <h2> Contacts </h2>\r\n          )}\r\n          {allContacts.map(contact => (\r\n            <li className={styles.item} key={uuidv4()}>\r\n              <p className={styles.contact}>\r\n                {contact.name}: {contact.number}\r\n              </p>\r\n              <button\r\n                type=\"button\"\r\n                className={styles.btn}\r\n                onClick={() => onDeleteContact(contact.id)}\r\n              >\r\n                Delete\r\n            </button>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n        {isLoading && (\r\n          <div className={styles.loader}>\r\n            {''}\r\n            <Loader type=\"Rings\" color=\"#00BFFF\" height={200} width={200} />\r\n          </div>\r\n        )}\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ContactsList;\r\n","import { connect } from 'react-redux';\r\nimport ContactsList from './ContactsList';\r\nimport { contactOperations, contactSelectors } from '../../redux/phonebook';\r\n\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  onDeleteContact: id => dispatch(contactOperations.deleteContact(id)),\r\n  fetchContacts: () => dispatch(contactOperations.fetchContacts()),\r\n});\r\n\r\nconst mapStateToProps = state => ( {\r\n  allContacts: contactSelectors.getVisibleContacts(state),\r\n  isLoading: contactSelectors.getLoading(state),\r\n})\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactsList);\r\n\r\n\r\n","import { v4 as uuidv4 } from 'uuid';\r\nimport { connect } from 'react-redux';\r\nimport styles from './Filter.module.css';\r\nimport { actions, contactSelectors } from '../../redux/phonebook';\r\n\r\nconst Filter = ({ handleChangeFilter, value }) => {\r\n  return (\r\n    <label className={styles.label} htmlFor={uuidv4()}>\r\n      Find contacts by name\r\n      <input\r\n        className={styles.input}\r\n        id={uuidv4()}\r\n        type=\"text\"\r\n        name=\"filter\"\r\n        onChange={handleChangeFilter}\r\n        value={value}\r\n      />\r\n    </label>\r\n  );\r\n};\r\nconst mapStateToProps = state => ({\r\n  value: contactSelectors.getFilter(state),\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  handleChangeFilter: event => dispatch(actions.changeFilter(event.target.value)),\r\n});\r\nexport default connect(mapStateToProps,mapDispatchToProps)(Filter);","//import { connect } from 'react-redux';\nimport Title from './components/Title';\nimport Form from './components/Form';\nimport ContactsList from './components/Contacts';\nimport Filter from './components/Filter';\nimport './App.css';\n\n  const App = () => {\n    return (\n      <>\n        <section className=\"phonebook\">\n          <Title title=\"Phonebook\" />\n          <Form />\n        </section>\n        <section className=\"contacts\">\n          <Title title=\"Contacts\" />\n          <Filter />\n          <ContactsList />\n        </section>\n      </>\n    );\n  }\n\n\nexport default App;","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\r\nimport {\r\n  //persistStore,\r\n  //persistReducer,\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from 'redux-persist';\r\nimport contactReducer from './phonebook/contact-reducer';\r\n//import storage from 'redux-persist/lib/storage';\r\nimport logger from 'redux-logger'; \r\n\r\n/* const persistConfig = {\r\n  key: 'contacts',\r\n  storage,\r\n  blacklist: ['filter'],\r\n}; */\r\nconst middleware = [\r\n  ...getDefaultMiddleware({\r\n    serializableCheck: {\r\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n    },\r\n  }),\r\n  logger, \r\n];\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    contacts: contactReducer,    \r\n  },\r\n  devTools: process.env.NODE_ENV === 'development',\r\n  middleware,\r\n});\r\n\r\n//const persistor = persistStore(store);\r\n\r\n// eslint-disable-next-line \r\nexport default store;\r\n","import React from 'react';\nimport { Provider } from 'react-redux';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport store from './redux/store';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>   \n      <App />    \n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);"],"sourceRoot":""}